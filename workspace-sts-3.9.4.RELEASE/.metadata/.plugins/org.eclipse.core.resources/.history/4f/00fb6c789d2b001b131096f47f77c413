package com.bambooJohn.test05;

import java.io.IOException;
import java.security.spec.DSAGenParameterSpec;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.Properties;

import javax.sql.DataSource;

import com.alibaba.druid.pool.DruidDataSourceFactory;

/**
 * 
 * 
 * 
 * 
 * @author 10338
 *
 */
public class JDBCToolsV1 {

	private static DataSource ds;
	
	static {
		
		try {
			Properties pro = new Properties();
			pro.load(JDBCToolsV1.class.getResourceAsStream("druid.properties"));
			try {
				ds = DruidDataSourceFactory.createDataSource(pro);
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	//抛出编译时异常
	public static Connection getConnection() throws SQLException {
		//方式一：DriverManager.getConnection()
		//方式二：连接池对象.getConnection()
		return ds.getConnection();
	}
	
	//抛出运行时异常
	public static void free(Connection conn) {
		if(conn != null) {
			try {
				conn.close();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				throw new RuntimeException();
			}
		}
	}
	
	//增、修改、删除
	public static int update(String sql,Object... eles) throws SQLException {
		//获取连接
		Connection conn = getConnection();
		
		//创建PreparedStatement
		PreparedStatement ps = conn.prepareStatement(sql);
		
		//设置？
		if(eles != null && eles.length > 0) {
			for(int i = 0;i < eles.length;i++) {
				ps.setObject(i + 1, eles[i]);
			}
		}
		
		//执行sql
		int len = ps.executeUpdate();
		
		ps.close();
		free(conn);
		
		return len;
	}
	
}
